library(dplyr)
heart_disease_2=select(heart_disease, -one_of(vars_to_remove))
heart_disease_2=select(-c(fasting_blood_sugar, exer_angina, exter_angina))
heart_disease_2= heart_disease %>%
select(-c(fasting_blood_sugar, exer_angina, exter_angina))
data(heart_disease)
heart_disease_2 = heart_disease %>%
select(-c(fasting_blood_sugar, exer_angina, exter_angina))
heart_disease_2 <- heart_disease %>%
select(-c(fasting_blood_sugar, exer_angina, exter_angina))
names(heart_disease)
heart_disease_2 <- heart_disease %>%
select(-c(fasting_blood_sugar, exer_angina, exter_angina))
heart_disease_2 <- heart_disease %>%
select(-c("fasting_blood_sugar"))
heart_disease_2 <- heart_disease %>%
select(-c(fasting_blood_sugar))
heart_disease_2 <- heart_disease %>%
select(-(fasting_blood_sugar))
heart_disease_2 <- heart_disease %>%
select(fasting_blood_sugar)
heart_disease_2 <-heart_disease %>%
select(fasting_blood_sugar)
heart_disease %>%
select(fasting_blood_sugar)
names(fasting_blood_sugar)
names(heart_disease)
heart <-heart["fasting_blood_sugar"]
heart <-heart_disease["fasting_blood_sugar"]
heart_disease_2 <-heart_disease["age",  "gender", "chest_pain","resting_blood_pressure",
"serum_cholestoral","resting_electro","max_heart_rate",
"oldpeak" ,"slope" , "num_vessels_flour",
"thal"  ,"heart_disease_severity" ,"has_heart_disease"  ]
heart_disease_2 <-heart_disease["age",  "gender", "chest_pain","resting_blood_pressure",
"serum_cholestoral","resting_electro","max_heart_rate",
"oldpeak" ,"slope" , "num_vessels_flour",
"thal"  ,"heart_disease_severity" ,"has_heart_disease"]
heart_disease_2 <-heart_disease[,c("age",  "gender", "chest_pain","resting_blood_pressure",
"serum_cholestoral","resting_electro","max_heart_rate",
"oldpeak" ,"slope" , "num_vessels_flour",
"thal"  ,"heart_disease_severity" ,"has_heart_disease")]
arrange(heart_disease_2, -p_zeros) %>% select(variable, q_zeros, p_zeros)
arrange(my_data_status, -p_zeros) %>% select(variable, q_zeros, p_zeros)
freq(data= heart_disease, input = c("thal", "chest_pain"))
View(heart_disease)
table(heart_disease$has_heart_disease)
View(heart)
View(corr_dataset)
anscombe_data =
read.delim(file="https://goo.gl/mVLz5L", header = T)
View(anscombe_data)
View(mtcars)
dat <- mtcars %>%
select(-vs, -am)
library(dplyr)
library(tidyverse)
library(readr)
library(caret)
library(gtsummary)
library(ggplot2)
library(stringr)
library(gplots)
library(broom.mixed)
library(lme4)
library(multilevel)
library(jtools)
library(performance)
dat <- mtcars %>%
select(-vs, -am)
library(tidyverse)
library(readr)
library(caret)
library(gtsummary)
library(ggplot2)
library(stringr)
library(gplots)
library(broom.mixed)
library(lme4)
library(multilevel)
library(jtools)
library(performance) # ised to extract ICC
# data(sleepstudy)  the sleep data set is part of the lme4 package
#install.packages("sjPlot")
library(sjPlot)
dat <- mtcars %>%
select(-vs, -am)
names(mtcars)
dat <- mtcars[,c("mpg",  "cyl", "disp","hp",
"drat","wt","qsec",
"gear" ,"crab")]
dat <- mtcars[,c("mpg", "cyl", "disp","hp",
"drat","wt","qsec",
"gear","crab")]
dat <- mtcars[,c("mpg", "cyl", "disp","hp",
"drat","wt","qsec",
"gear","carb")]
cor(dat$hp, dat$mpg)
cor(dat$hp, dat$mpg,
method = "spearman"
)
View(dat)
table(dat$gear)
table(dat$carb)
table(dat$cyl)
round(cor(dat),
digits = 2 # rounded to 2 decimals
)
library(corrplot)
corrplot(cor(dat),
method = "number",
type = "upper" # show only upper side
)
)
rawdatacorr1 <- read_csv("data/rawdatacorr1.csv")
View(rawdatacorr1)
round(cor(rawdatacorr1),digits = 2)
data("mtcars")
force(mtcars)
View(mtcars)
dat <- mtcars[,c("mpg", "cyl", "disp","hp",
+            "drat","wt","qsec",
+            "gear","carb")]
dat <- mtcars[,c("mpg", "cyl", "disp","hp",
"drat","wt","qsec",
"gear","carb")]
View(dat)
View(rawdatacorr1)
data1 <- rawdatacorr1 %>%
select(-patno)
View(rawdatacorr1)
names(rawdatacorr1)
rawdatacorr1 <- read_csv("data/darta1.csv")
View(rawdatacorr1)
dat1 <- mtcars[,c("mpg", "cyl", "disp","hp",
"drat","wt","qsec",
"gear","carb")]
View(dat1)
round(cor(dat1),digits = 2)
round(cor(data1),digits = 2)
round(cor(rawdatacorr1 ),digits = 2)
View(rawdatacorr1)
names(rawdatacorr1)
View(rawdatacorr1)
pairs(rawdatacorr1, c(1: 14))
pairs(rawdatacorr1, c(1:3))
par(mar=c(1,1,1,1))
pairs(rawdatacorr1, c(1:14))
par(mar=c(1,1,1,1))
pairs(rawdatacorr1, c(1:14))
par(mar=c(1,1,1,1))
pairs(rawdatacorr1, c(1:4))
par(mar=c(1,1,1,1))
pairs(rawdatacorr1, c(1:4))
pairs(rawdatacorr1, c(1,4,6))
pairs(rawdatacorr1[, c(1,4,6)])
pairs(rawdatacorr1[, c(1:14)])
pairs(rawdatacorr1[, c(1,2,3,4,5,6,7,8,9,10,11,12,13,14)])
par(mar=c(1,1,1,1))
pairs(rawdatacorr1[, c(1,2,3,4,5,6,7,8,9,10,11,12,13,14)])
pairs(rawdatacorr1[, c(1,2,3,4)])
qqnorm(rawdatacorr1$`logBET DT`)
qqline(rawdatacorr1$`logBET DT`)
qqnorm(rawdatacorr1$`logBET RT`)
qqline(rawdatacorr1$`logBET RT`)
qqnorm(rawdatacorr1$`logpercieved1 saltiness0.056M`)
qqnorm(rawdatacorr1$`logpercieved1 saltiness0.056M`)
qqline(rawdatacorr1$`logpercieved1 saltiness0.056M`)
qqnorm(rawdatacorr1$logpercieved1saltness0.56M)
qqline(rawdatacorr1$logpercieved1saltness0.56M)
qqnorm(rawdatacorr1$flowrate_meanUS)
qqline(rawdatacorr1$flowrate_meanUS)
qqnorm(rawdatacorr1$flowrate_meanSS)
qqnorm(rawdatacorr1$flowrate_meanSS)
qqline(rawdatacorr1$flowrate_meanSS)
qqnorm(rawdatacorr1$sodiumconc_meanUS)
qqline(rawdatacorr1$sodiumconc_meanUS)
qqnorm(rawdatacorr1$sodiumconc_meanSS)
qqline(rawdatacorr1$sodiumconc_meanSS)
qqnorm(rawdatacorr1$proteinconc_meanUS)
qqline(rawdatacorr1$proteinconc_meanUS)
qqnorm(rawdatacorr1$proteinconc_meanSS)
qqline(rawdatacorr1$proteinconc_meanSS)
qqnorm(rawdatacorr1$dailysodiumIntake)
qqnorm(rawdatacorr1$dailycalorieintake)
qqnorm(rawdatacorr1$sodiumintakePerKca)
qqnorm(rawdatacorr1$`sodiumintake ffq`)
library(Hmisc)
res <-rcorr(as.matrix(rawdatacorr1))
round(res$P,3)
install.packages("correlations")
library(correlation)
correlation::correlation(rawdatacorr1, include_factors = TRUE,
method = "auto")
correlation::correlation(rawdatacorr1, include_factors = TRUE,
method = "spearman")
?correlation
correlation::correlation(rawdatacorr1, include_factors = TRUE,
method = "spearman", p_adjust = "bonferroni")
corr1data <- correlation::correlation(rawdatacorr1, include_factors = TRUE,
method = "spearman", p_adjust = "bonferroni")
View(corr1data)
write.csv(corr1data,"./data_output/corr1data.csv")
corr_results1 <- correlation::correlation(rawdatacorr1, include_factors = TRUE,
method = "spearman", p_adjust = "bonferroni")
write.csv(corr_results1,"./data_output/corr_results1.csv")
rawdatacorr2 <- read_csv("data/darta2.csv")
round(cor(rawdatacorr2 ),digits = 2)
qqnorm(rawdatacorr2$`logBET DT`)
qqline(rawdatacorr2$`logBET DT`)
qqnorm(rawdatacorr2$`logBET RT`)
qqline(rawdatacorr2$`logBET RT`)
qqnorm(rawdatacorr2$`logpercieved1 saltiness0.056M`)
qqline(rawdatacorr2$`logpercieved1 saltiness0.056M`)
qqnorm(rawdatacorr2$logpercieved1saltness0.56M)
qqline(rawdatacorr2$logpercieved1saltness0.56M)
qqnorm(rawdatacorr2$flowrate_meanUS)
qqline(rawdatacorr2$flowrate_meanUS)
qqnorm(rawdatacorr2$flowrate_meanSS)
qqline(rawdatacorr2$flowrate_meanSS)
qqnorm(rawdatacorr2$sodiumconc_meanUS)
qqline(rawdatacorr2$sodiumconc_meanUS)
qqnorm(rawdatacorr2$sodiumconc_meanSS)
qqline(rawdatacorr2$sodiumconc_meanSS)
qqnorm(rawdatacorr2$proteinconc_meanUS)
qqline(rawdatacorr2$proteinconc_meanUS)
qqnorm(rawdatacorr2$proteinconc_meanSS)
qqline(rawdatacorr2$proteinconc_meanSS)
qqnorm(rawdatacorr2$dailysodiumIntake)
qqnorm(rawdatacorr2$dailycalorieintake)
qqnorm(rawdatacorr2$sodiumintakePerKca)
qqnorm(rawdatacorr2$`sodiumintake ffq`)
res2 <-rcorr(as.matrix(rawdatacorr2))
round(res2$P,3)
corr_results2 <- correlation::correlation(rawdatacorr2, include_factors = TRUE,
method = "spearman", p_adjust = "bonferroni")
View(corr_results2)
write.csv(corr_results2,"./data_output/corr_results2.csv")
# Loading Libraries
library(dplyr)
library(tidyverse)
library(readr)
library(caret)
library(gtsummary)
library(ggplot2)
library(stringr)
library(gplots)
library(broom.mixed)
library(lme4)
library(multilevel)
library(jtools)
library(performance) # ised to extract ICC
# data(sleepstudy)  the sleep data set is part of the lme4 package
#install.packages("sjPlot")
library(sjPlot)
library(funModeling)
data(heart_disease)
rawdatacorr1 <- read_csv("data/darta1.csv")
round(cor(rawdatacorr1 ),digits = 2)
library(Hmisc)
#install.packages("correlations")
library(correlation)
res <-rcorr(as.matrix(rawdatacorr1))
round(res$P,3)
corr_results1 <- correlation::correlation(rawdatacorr1, include_factors = TRUE,
method = "spearman", p_adjust = "bonferroni")
write.csv(corr_results1,"./data_output/corr_results1.txt")
write.table(corr_results1,"corr_results1.txt",sep="\t",row.names=FALSE)
write.table(corr_results1,"corr_results1.txt",sep="\t",row.names=FALSE)
data(state.x77)
data(state.X77)
mydata = read.csv("https://wiki.q-researchsoftware.com/images/b/b9/Ownership.csv", header = TRUE, fileEncoding="latin1")
View(mydata)
corr_results2 <- correlation::correlation(rawdatacorr2, include_factors = TRUE,
method = "spearman", p_adjust = "bonferroni")
corr_results1 <- correlation::correlation(rawdatacorr1, include_factors = TRUE,
method = "spearman", p_adjust = "bonferroni")
View(corr_results1)
View(corr_results1)
results1 <- corr_results1 %>%
filter(p <0.05)
View(results1)
corr.test(rawdatacorr1$`logBET DT`,rawdatacorr1$`logBET RT`, method = "spearman")
cor.test(rawdatacorr1$`logBET DT`,rawdatacorr1$`logBET RT`, method = "spearman")
# Loading Libraries
library(dplyr)
library(tidyverse)
library(readr)
library(caret)
library(gtsummary)
library(ggplot2)
library(stringr)
library(gplots)
library(broom.mixed)
library(lme4)
library(multilevel)
library(jtools)
library(performance) # ised to extract ICC
# data(sleepstudy)  the sleep data set is part of the lme4 package
#install.packages("sjPlot")
library(sjPlot)
load("~/Katherine_Mixed Model/linearmixedmodel/data_output/analysisset_saliva.Rdata")
flowmodel <- lmer(flowrate ~ treatment + (1|patno) +  (1|visit),
data = salivadata, REML = FALSE)
summ(flowmode)
summ(flowmodel)
flowrate <- glmer(flowrate ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
flowmodel <- lmer(flowrate ~ treatment + (1|patno) +  (1|visit),
data = salivadata, REML = FALSE)
flowrate <- glmer(flowrate ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
flowrate1 <- glmer(flowrate ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
flowrate2 <- glmer(flowrate ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "inverse"),  # link function = identity
data = salivadata)
summ(flowrate2)
flowrate1 <- glmer(flowrate ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
summ(flowrate1)
flowmodel <- lmer(flowrate ~ treatment + (1|patno),
data = salivadata, REML = FALSE)
summ(flowmodel)
flowmodel <- lmer(flowrate ~ treatment + (1|patno) + (1|visit),
data = salivadata, REML = FALSE)
summ(flowmodel)
flowrate1 <- glmer(flowrate ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
summ(flowrate1)
flowmodel <- lmer(flowrate ~ treatment + (1|patno) + (1|visit),
data = salivadata, REML = FALSE)
summ(flowmodel)
flowmodel_g <- glmer(flowrate ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
summ(flowmodel_g)
proteinmodel <- lmer(protenconc ~ treatment + (1|patno) +  (1|visit),
data = salivadata, REML = FALSE)
summ(proteinmodel, confint = TRUE)
load("~/Katherine_Mixed Model/linearmixedmodel/data_output/analysisset_saliva.Rdata")
flowmodel <- lmer(flowrate ~ treatment + (1|patno) +  (1|visit),
data = salivadata, REML = FALSE)
summ(flowmodel, confint = TRUE)
flowsubset <-
salivadata %>%
mutate(lm_predict = predict(flowmodel)) %>%
mutate(resid = (flowrate - lm_predict))
ggplot(data = flowsubset,
aes(x = resid)) +
geom_density() +
labs(x = "residuals", y = "density",
title = "Residual plot")
qqnorm(flowsubset$resid)
qqline(flowsubset$resid)
dev.off()
qqnorm(flowsubset$resid)
qqline(flowsubset$resid)
shapiro.test(flowsubset$resid)
proteinmodel <- lmer(protenconc ~ treatment + (1|patno) +  (1|visit),
data = salivadata, REML = FALSE)
summ(proteinmodel, confint = TRUE)
proten_residuals <-data.frame(residuals(proteinmodel))
ggplot(data = proten_residuals,
aes(x = residuals.proteinmodel.)) +
geom_density() +
labs(x = "residuals", y = "density",
title = "Residual plot-protein")
qqnorm(proten_residuals$residuals.proteinmodel.)
qqline(proten_residuals$residuals.proteinmodel.)
shapiro.test(proten_residuals$residuals.proteinmodel.)
protein_g <- glmer(protenconc ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
proten_residuals_g <-data.frame(residuals(protein_g))
View(proten_residuals_g)
View(proten_residuals_g)
qqnorm(proten_residuals_g$residuals.proteinmodel_g)
qqline(proten_residuals_g$residuals.proteinmodel_g)
shapiro.test(proten_residuals_g$residuals.proteinmodel_g)
protein_g <- glmer(protenconc ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
proten_residuals_g <-data.frame(residuals(protein_g))
View(proten_residuals_g)
qqnorm(proten_residuals_g$residuals.proteinmodel_g.)
names(proten_residuals_g)
qqnorm(proten_residuals_g$residuals.protein_g.)
qqline(proten_residuals_g$residuals.protein_g.)
shapiro.test(proten_residuals_g$residuals.protein_g.)
summ(protein_g)
summ(protein_g, confint = TRUE)
sodium.model <- lmer(sodiumconc ~ treatment  + (1|patno), # this is an intercept only model where
# we just estimate the mean of the data set
data = salivadata, REML = FALSE)
summ(sodium.model, confint = TRUE)
so_residuals <-data.frame(residuals(sodium.model))
ggplot(data = so_residuals,
aes(x = residuals.sodium.model.)) +
geom_density() +
labs(x = "residuals", y = "density",
title = "Residual plot-sodium")
qqnorm(so_residuals$residuals.sodium.model.)
qqline(so_residuals$residuals.sodium.model.)
shapiro.test(so_residuals$residuals.sodium.model.)
na_g <- glmer(sodiumconc ~ treatment  + (1|patno),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
na_residuals_g <-data.frame(residuals(na_g))
qqnorm(na_residuals_g$residuals.na_g.)
qqline(na_residuals_g$residuals.na_g.)
shapiro.test(na_residuals_g$residuals.na_g.)
mg <- lmer(magnesiumconc ~ treatment  + bmicat + (1|patno) +  (1|visit), # this is an intercept only model where
# we just estimate the mean of the data set
data = salivadata, REML = FALSE)
summ(mg, confint = TRUE)
mg <- lmer(magnesiumconc ~ treatment  + (1|patno) +  (1|visit), # this is an intercept only model where
# we just estimate the mean of the data set
data = salivadata, REML = FALSE)
summ(mg, confint = TRUE)
mg_residuals <-data.frame(residuals(mg))
qqnorm(mg_residuals$residuals.mg)
qqline(mg_residuals$residuals.mg)
shapiro.test(mg_residuals$residuals.mg)
mg_g <- glmer(magnesiumconc ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
mg_residuals_g <-data.frame(residuals(mg_g))
qqnorm(mg_residuals_g$residuals.mg_g.)
qqnorm(mg_residuals_g$residuals.mg_g.)
qqline(mg_residuals_g$residuals.mg_g.)
shapiro.test(mg_residuals_g$residuals.mg_g.)
ph <- lmer(phosphorus ~ treatment  + (1|patno) +  (1|visit), # this is an intercept only model where
# we just estimate the mean of the data set
data = salivadata, REML = FALSE)
summ(ph, confint = TRUE)
ph_residuals <-data.frame(residuals(ph))
qqnorm(ph_residuals$residuals.ph)
qqline(ph_residuals$residuals.ph)
shapiro.test(ph_residuals$residuals.ph)
ph_g <- glmer(phosphorus ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
ph_residuals_g <-data.frame(residuals(ph_g))
qqnorm(ph_residuals_g$residuals.ph_g.)
qqline(ph_residuals_g$residuals.ph_g.)
shapiro.test(ph_residuals_g$residuals.ph_g.)
k <- lmer(potassiom ~ treatment  + (1|patno) +  (1|visit), # this is an intercept only model where
# we just estimate the mean of the data set
data = salivadata, REML = FALSE)
summ(k, confint = TRUE)
k_residuals <-data.frame(residuals(k))
qqnorm(k_residuals$residuals.k)
qqline(k_residuals$residuals.k)
shapiro.test(k_residuals$residuals.k)
ph_g <- glmer(phosphorus ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
ph_residuals_g <-data.frame(residuals(ph_g))
qqnorm(ph_residuals_g$residuals.ph_g.)
qqline(ph_residuals_g$residuals.ph_g.)
shapiro.test(ph_residuals_g$residuals.ph_g.)
ca_g <- glmer(calcium ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
ca_residuals_g <-data.frame(residuals(ca_g))
qqnorm(ca_residuals_g$residuals.ca_g.)
qqline(ca_residuals_g$residuals.ca_g.)
shapiro.test(ca_residuals_g$residuals.ca_g.)
sul_g <- glmer(sulphur ~ treatment  + (1|patno) +  (1|visit),
family = Gamma(link = "identity"),  # link function = identity
data = salivadata)
sul_residuals_g <-data.frame(residuals(sul_g))
qqnorm(sul_residuals_g$residuals.sul_g.)
qqline(sul_residuals_g$residuals.sul_g.)
shapiro.test(sul_residuals_g$residuals.sul_g.)
install.packages("datarium")
library(datarium)
set.seed(123)
data("anxiety", package = "datarium")
set.seed(123)
data("anxiety", package = "datarium")
anxiety %>% sample_n_by(group, size = 1)
anxiety <- anxiety %>%
gather(key = "time", value = "score", t1, t2, t3) %>%
convert_as_factor(id, time)
install.packages("rstatix")
install.packages("rstatix")
library(rstatix)
install.packages("rstatix")
library(rstatix)
set.seed(123)
data("anxiety", package = "datarium")
anxiety %>% sample_n_by(group, size = 1)
anxiety <- anxiety %>%
gather(key = "time", value = "score", t1, t2, t3) %>%
convert_as_factor(id, time)
library(tidyverse)
set.seed(123)
data("anxiety", package = "datarium")
anxiety %>% sample_n_by(group, size = 1)
anxiety <- anxiety %>%
gather(key = "time", value = "score", t1, t2, t3) %>%
convert_as_factor(id, time)
install.packages("ggpubr")
library(ggpubr)
install.packages("broom", >= 0.7.4)
install.packages("broom")
